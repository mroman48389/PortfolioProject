/* We want the nav bar fixed to the top of the screen. This will take it out of the document flow, so we'll have to give the elements that follow
   a margin so the nav bar won't overlap with the nav bar (done on <main>). This will position the nav bar relative to the html element and 
   constrain it by the viewport. Children of the nav element will be centered in the middle of the page and have their width constrained so they
   don't span the entire nav bar. Note this has to be done on <nav> and not in .nav for said children to appear properly because of how fixed takes
   elements out of the document flow. */
nav {
    position: fixed;
    top: 0; 
    left: 0;
    width: 100%; 
    z-index: 1000;

    /* Needed for nav bar to appear solid. */
    background-color: inherit; 

    /* Transition adding/removing the box shadow when the user scrolls so it's not jarring. */
    transition: box-shadow 0.3s ease;
}

/* .scrolled is added/removed by JavaScript depending on if the window is in a scrolled position. If it is, add a subtle shadow to the bottom. */
nav.scrolled {
    box-shadow: var(--nav-shadow-box);
}

/* Entire nav consists of a logo we want on the left and an unordered list of nav anchors we want as 
   aligned on the right as a group. */
.nav {
    display: flex;
    justify-content: space-between;
    align-items: center;
    /* Looks better with no left padding. Right padding is needed to not overlap with light/dark mode button. */ 
    padding-block: 20px;
    padding-right: 90px;

    /* Make it less jarring when we add/remove the padding on scroll changes. */
    transition: padding 0.3s ease;
}

/* Padding doesn't look good when the user has scrolled, so just remove it. */
nav.scrolled .nav {
    padding-block: 0px;
}

/* This styles just the list part of the nav. */
.nav-list {
    display: flex;
    list-style-type: none;
    gap: 10px;
}

/* On smaller devices, hide all links except "Hire me". */
@media(max-width: 48.5rem) {
    .nav-list li:not(:last-child) {
        display: none;
    }
}